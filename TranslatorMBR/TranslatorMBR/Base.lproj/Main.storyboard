<?xml version="1.0" encoding="UTF-8"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="23094" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="BYZ-38-t0r">
    <device id="retina6_12" orientation="portrait" appearance="light"/>
    <dependencies>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="23084"/>
        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
        <capability name="System colors in document resources" minToolsVersion="11.0"/>
        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID="tne-QT-ifu">
            <objects>
                <viewController id="BYZ-38-t0r" customClass="ViewController" customModule="TranslatorMBR" customModuleProvider="target" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
                        <rect key="frame" x="0.0" y="0.0" width="393" height="852"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" text="Lorem ipsum dolor sit er elit lamet, consectetaur." textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="0ZJ-eC-km7">
                                <rect key="frame" x="38" y="220" width="162" height="128"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                <color key="textColor" systemColor="labelColor"/>
                                <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                            </textView>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="hHj-h1-9Fn">
                                <rect key="frame" x="237" y="355" width="79" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="Dictate"/>
                                <connections>
                                    <action selector="startDictation:" destination="BYZ-38-t0r" eventType="touchUpInside" id="XRN-tA-s9l"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="fTx-ET-zuI">
                                <rect key="frame" x="258" y="433" width="79" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="History"/>
                                <connections>
                                    <action selector="showHistory:" destination="BYZ-38-t0r" eventType="touchUpInside" id="5WI-M7-7vf"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="J6w-iw-BVU">
                                <rect key="frame" x="34" y="433" width="81" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="add fav"/>
                                <connections>
                                    <action selector="addToFavorites:" destination="BYZ-38-t0r" eventType="touchUpInside" id="oWY-Q9-ZzI"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="fPq-uH-iLz">
                                <rect key="frame" x="155" y="355" width="73" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="Sound"/>
                                <connections>
                                    <action selector="speakTranslation:" destination="BYZ-38-t0r" eventType="touchUpInside" id="aYu-uq-Jbn"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="5t1-Vi-CqT">
                                <rect key="frame" x="56" y="355" width="91" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="translate"/>
                                <connections>
                                    <action selector="translate:" destination="BYZ-38-t0r" eventType="touchUpInside" id="2vm-c1-2Bc"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="yUP-8J-2Vk">
                                <rect key="frame" x="143" y="433" width="93" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="Favorites"/>
                                <connections>
                                    <action selector="showFavorites:" destination="BYZ-38-t0r" eventType="touchUpInside" id="9cV-r2-JSf"/>
                                </connections>
                            </button>
                            <pickerView contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="oHM-2c-xbq">
                                <rect key="frame" x="25" y="131" width="152" height="74"/>
                                <autoresizingMask key="autoresizingMask" widthSizable="YES" flexibleMaxY="YES"/>
                            </pickerView>
                            <pickerView contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="nrQ-Pd-tXd">
                                <rect key="frame" x="202" y="131" width="152" height="74"/>
                                <autoresizingMask key="autoresizingMask" widthSizable="YES" flexibleMaxY="YES"/>
                            </pickerView>
                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Label" lineBreakMode="tailTruncation" numberOfLines="25" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="fub-cM-DFR">
                                <rect key="frame" x="218" y="220" width="105" height="41"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
                                <nil key="textColor"/>
                                <nil key="highlightedColor"/>
                            </label>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="6Tk-OE-BBY"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                    <connections>
                        <outlet property="inputTextView" destination="0ZJ-eC-km7" id="dpt-pl-g1N"/>
                        <outlet property="sourceLanguagePicker" destination="oHM-2c-xbq" id="9hs-2O-gPa"/>
                        <outlet property="targetLanguagePicker" destination="nrQ-Pd-tXd" id="dJn-Ki-nof"/>
                        <outlet property="translationLabel" destination="fub-cM-DFR" id="jeX-Fh-ysw"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="130.53435114503816" y="-34.507042253521128"/>
        </scene>
        <!--import UIKit  class HistoryViewController: UIViewController {     @IBOutlet weak var tableView: UITableView!     var history: [String] = []          override func viewDidLoad() {         super.viewDidLoad()         tableView.dataSource = self         tableView.delegate = self     } }  extension HistoryViewController: UITableViewDataSource, UITableViewDelegate {     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {         return history.count     }          func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {         let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryCell", for: indexPath)         cell.textLabel?.text = history[indexPath.row]         return cell     } } import UIKit  class HistoryViewController: UIViewController {     @IBOutlet weak var tableView: UITableView!     var history: [String] = []          override func viewDidLoad() {         super.viewDidLoad()         tableView.dataSource = self         tableView.delegate = self     } }  extension HistoryViewController: UITableViewDataSource, UITableViewDelegate {     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {         return history.count     }          func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {         let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryCell", for: indexPath)         cell.textLabel?.text = history[indexPath.row]         return cell     } } HistoryViewController-->
        <scene sceneID="qfo-Sf-kWT">
            <objects>
                <viewController storyboardIdentifier="HistoryViewController" useStoryboardIdentifierAsRestorationIdentifier="YES" id="QTv-OK-XaD" customClass="HistoryViewController" customModule="TranslatorMBR" customModuleProvider="target" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Ycs-xW-Vnd">
                        <rect key="frame" x="0.0" y="0.0" width="393" height="852"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <tableView clipsSubviews="YES" contentMode="scaleToFill" fixedFrame="YES" alwaysBounceVertical="YES" dataMode="prototypes" style="plain" separatorStyle="default" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="-1" estimatedSectionHeaderHeight="-1" sectionFooterHeight="-1" estimatedSectionFooterHeight="-1" translatesAutoresizingMaskIntoConstraints="NO" id="180-yF-BV4">
                                <rect key="frame" x="76" y="420" width="240" height="128"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </tableView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Ogr-dQ-0NC"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                    <mutableString key="userLabel">import UIKit

class HistoryViewController: UIViewController {
    @IBOutlet weak var tableView: UITableView!
    var history: [String] = []
    
    override func viewDidLoad() {
        super.viewDidLoad()
        tableView.dataSource = self
        tableView.delegate = self
    }
}

extension HistoryViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {
        return history.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryCell", for: indexPath)
        cell.textLabel?.text = history[indexPath.row]
        return cell
    }
}
import UIKit

class HistoryViewController: UIViewController {
    @IBOutlet weak var tableView: UITableView!
    var history: [String] = []
    
    override func viewDidLoad() {
        super.viewDidLoad()
        tableView.dataSource = self
        tableView.delegate = self
    }
}

extension HistoryViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {
        return history.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryCell", for: indexPath)
        cell.textLabel?.text = history[indexPath.row]
        return cell
    }
}
HistoryViewController</mutableString>
                    <connections>
                        <outlet property="tableView" destination="180-yF-BV4" id="g8e-ob-Cm3"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="RmT-kp-zeG" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="825" y="-35"/>
        </scene>
        <!--Favorites View Controller-->
        <scene sceneID="dIb-ch-2ui">
            <objects>
                <viewController storyboardIdentifier="FavoritesViewController" id="rCW-oh-ljJ" customClass="FavoritesViewController" customModule="TranslatorMBR" customModuleProvider="target" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="YI3-5g-usY">
                        <rect key="frame" x="0.0" y="0.0" width="393" height="852"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <tableView clipsSubviews="YES" contentMode="scaleToFill" fixedFrame="YES" alwaysBounceVertical="YES" dataMode="prototypes" style="plain" separatorStyle="default" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="-1" estimatedSectionHeaderHeight="-1" sectionFooterHeight="-1" estimatedSectionFooterHeight="-1" translatesAutoresizingMaskIntoConstraints="NO" id="Ol7-EM-0pt">
                                <rect key="frame" x="100" y="401" width="240" height="128"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </tableView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="z8f-ZU-iRt"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                    <connections>
                        <outlet property="tableView" destination="Ol7-EM-0pt" id="kQ4-Qq-YJw"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="OVT-ch-bRO" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1624" y="-35"/>
        </scene>
    </scenes>
    <resources>
        <systemColor name="labelColor">
            <color white="0.0" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
        </systemColor>
        <systemColor name="systemBackgroundColor">
            <color white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
        </systemColor>
    </resources>
</document>
